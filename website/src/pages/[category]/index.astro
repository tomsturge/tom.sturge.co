---
import type { CollectionPage, WithContext } from "schema-dts";

import { ArticleList, Sidebar, Seo } from "@/ui/components";
import { DefaultLayout } from "@/ui/layouts";
import { getCategories } from "@/ui/queries";

export async function getStaticPaths() {
  const categories = await getCategories();

  return categories.map((category) => ({
    params: { category: category.slug.current },
    props: {
      category,
      articles: category.articles,
    },
  }));
}

type CategoryType = {
  _id: string;
  title: string;
  slug: {
    current: string;
  };
  description: string;
  articles: any[];
};

type Props = {
  category: CategoryType;
  articles: any[];
};

const { category, articles } = Astro.props;

const canonicalURL = new URL(Astro.url.pathname, Astro.site);

const collectionSchema: WithContext<CollectionPage> = {
  "@context": "https://schema.org",
  "@type": "CollectionPage",
  "@id": `https://tomsturge.com/${category.slug.current}/`,
  url: `https://tomsturge.com/${category.slug.current}/`,
  name: `${category.title} Articles`,
  isPartOf: { "@id": "https://tomsturge.com/" },
  description: `A collection of articles covering ${category.title.toLowerCase()}`,
  mainEntity: articles.map((article) => ({
    "@type": "Article",
    "@id": `https://tomsturge.com/${category.title.toLowerCase()}/${article.slug.current}/`,
    name: article.title,
    url: `https://tomsturge.com/${category.title.toLowerCase()}/${article.slug.current}/`,
  })),
  inLanguage: "en-GB",
};
---

<DefaultLayout>
  <Fragment slot="seo">
    <Seo url={canonicalURL} />

    <script
      type="application/ld+json"
      set:html={JSON.stringify(collectionSchema)}
    />
  </Fragment>

  <main itemscope itemtype="https://schema.org/CollectionPage">
    <div class="title">
      <h1 itemprop="name">{category.title}</h1>
      <p>{category.description}</p>
    </div>

    <div class="container">
      <div class="content">
        <ArticleList
          itemsPerRow={2}
          articles={articles}
          limit={null}
          minCount={0}
        />
      </div>

      <Sidebar />
    </div>
  </main>
</DefaultLayout>

<style lang="scss">
  .title {
    max-width: var(--widthMainContainer);
    width: 100%;
    margin: 0 auto;

    p {
      margin: 0;
    }

    h1 {
      font-size: var(--fontSizeHeading);
    }

    @media screen and (max-width: 79rem) {
      margin-right: 2rem;
      margin-left: 2rem;
      width: calc(100% - 4rem);
    }
  }

  main {
    margin-top: 2rem;
  }

  .container {
    max-width: var(--widthMainContainer);
    width: 100%;
    margin: 2rem auto;
    display: grid;
    grid-template-columns: repeat(3, 1fr);
    gap: 2rem;

    @media screen and (max-width: 79rem) {
      margin-right: 2rem;
      margin-left: 2rem;
      width: calc(100% - 4rem);
      gap: 1rem;
    }

    @media screen and (max-width: 62rem) {
      grid-template-columns: repeat(2, 1fr);
    }
  }

  .content {
    grid-column: span 2;
    margin-top: -2rem;
  }
</style>
