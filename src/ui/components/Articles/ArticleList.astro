---
import { getArticles } from "@/ui/queries";

import { urlForImage } from "@/sanity/urlForImage";
import { CategoryLabel } from "./CategoryLabel";

const {
  limit = 3,
  compact = false,
  theme = "light",
  articleMonth,
  featured = false,
  articles = null,
  itemsPerRow = 3,
} = Astro.props;

const posts = articles
  ? articles
  : await getArticles({ limit, featured, articleMonth });
---

<ul class:list={["wrapper", compact && "compact", `rowCount--${itemsPerRow}`]}>
  {
    posts.map(({ title, slug, excerpt, mainImage, category }) => (
      <li class="item">
        <a href={`/articles/${slug.current}`}>
          <img
            class="image"
            transition:name={`article-${slug.current}-image`}
            src={urlForImage(mainImage).height(480).quality(100).url()}
          />

          <div class="content-wrapper">
            <div class="category">
              <CategoryLabel
                name={category.title}
                transition={`article-${slug.current}-category-${category.title.toLowerCase()}`}
              />
            </div>

            <h2
              class:list={["title", theme]}
              transition:name={`article-${slug.current}-title`}
            >
              {title}
            </h2>

            <p
              class="excerpt"
              transition:name={`article-${slug.current}-excerpt`}
            >
              {excerpt}
            </p>
          </div>
        </a>
      </li>
    ))
  }
</ul>

<style lang="scss">
  .wrapper {
    max-width: var(--widthMainContainer);
    width: 100%;
    list-style: none;
    margin: 2rem auto;
    padding: 0;
    display: grid;
    gap: 2rem;

    &.rowCount--2 {
      grid-template-columns: repeat(2, 1fr);
    }

    &.rowCount--3 {
      grid-template-columns: repeat(3, 1fr);
    }
  }

  .item {
  }

  a {
    display: block;
    position: relative;
  }

  .image {
    width: 100%;
    margin-bottom: 1rem;
    border-radius: 0.625rem;
    aspect-ratio: 16 / 10;
    object-fit: cover;
  }

  .category {
    position: absolute;
    top: 1rem;
    left: 1rem;
  }

  .title {
    font-size: 1.5rem;
    line-height: 1.4375rem;
    margin: 0 0 1rem;
  }

  .excerpt {
    margin-bottom: 0;
    color: #888;
  }

  .wrapper.compact {
    margin: 0;
    display: grid;
    grid-template-columns: initial;
    grid-template-rows: repeat(2, 1fr);
    gap: 1rem;

    a {
      display: grid;
      grid-template-columns: [content] auto [image] 100px;
    }

    .content-wrapper {
      grid-area: content;
      margin-right: 0.5rem;
    }

    .image {
      grid-area: image;
      margin-bottom: 0;
      width: 100%;
      height: 100%;
    }

    .category {
      position: static;
      top: initial;
      left: initial;
      margin-bottom: 0.5rem;
    }

    .title {
      color: var(--colorBlack);
      margin-bottom: 0.5rem;
      font-size: 1.125rem;
      overflow: hidden;
      text-overflow: ellipsis;
      display: -webkit-box;
      -webkit-line-clamp: 1;
      -webkit-box-orient: vertical;

      &.dark {
        color: var(--colorWhite);
      }
    }

    .excerpt {
      color: #999;
      overflow: hidden;
      text-overflow: ellipsis;
      display: -webkit-box;
      font-size: 0.875rem;
      -webkit-line-clamp: 2;
      -webkit-box-orient: vertical;
    }
  }
</style>
