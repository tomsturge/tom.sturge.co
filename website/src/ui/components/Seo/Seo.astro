---
import type { WebSite, Person, WithContext } from "schema-dts";

import { getSiteSettings } from "@/ui/queries";
import { urlForImage } from "@/scripts/urlForImage";
import type { SeoProps } from "./types";

const siteSettings = await getSiteSettings();

interface Props extends SeoProps {}

const { title, description, url, image, author, publishedAt } = Astro.props;

const seoDescription = description || siteSettings.description;
const seoImage =
  image || urlForImage(siteSettings.seoImage).width(1200).height(630).url();

const websiteSchema: WithContext<WebSite> = {
  "@context": "https://schema.org",
  "@type": "WebSite",
  "@id": "https://tomsturge.com/",
  url: "https://tomsturge.com/",
  name: "tomsturge.com",
  description: siteSettings.description,
  inLanguage: "en-GB",
};

const personSchema: WithContext<Person> = {
  "@context": "https://schema.org",
  "@type": "Person",
  "@id": "https://tomsturge.com/#person",
  name: "Tom Sturge",
  url: "https://tomsturge.com/",
  jobTitle: "Coach, Consultant & Advocate for Women and Minorities",
  email: "feedback@tomsturge.com",
  description:
    "Professional coach, consultant and DEI advocate helping organizations build inclusive cultures and empowering underrepresented individuals to reach their potential.",
  knowsAbout: [
    "Coaching",
    "Consulting",
    "Diversity, Equity & Inclusion",
    "Leadership Development",
    "Inclusive Leadership",
    "Organizational Culture",
  ],
};
---

<link rel="canonical" href={url} />
<meta name="description" content={seoDescription} />

<meta property="article:author" content={author} />

<meta name="twitter:card" content="summary_large_image" />
<meta name="twitter:description" content={seoDescription} />

<meta property="og:description" content={seoDescription} />
<meta property="og:type" content="article" />
<meta property="og:locale" content="en_GB" />
<meta property="og:site_name" content={siteSettings.title} />
<meta property="og:url" content={url} />
<meta property="og:image" content={seoImage} />
<meta property="og:image:width" content="1200" />
<meta property="og:image:height" content="630" />

{
  title && (
    <>
      <meta name="twitter:title" content={title} />
      <meta property="og:title" content={title} />
    </>
  )
}

{
  publishedAt && (
    <meta
      property="article:published_time"
      content={new Date(publishedAt).toISOString()}
    />
  )
}

<script type="application/ld+json" set:html={JSON.stringify(websiteSchema)} />
<script type="application/ld+json" set:html={JSON.stringify(personSchema)} />
