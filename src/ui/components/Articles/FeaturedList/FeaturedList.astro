---
import { urlForImage } from "@/sanity/urlForImage";

import { CategoryLabel } from "@/ui/components";

const { articles } = Astro.props;
---

<ul class="wrapper">
  {
    articles.map(({ title, slug, mainImage, category }, index) => (
      <li class:list={["item", `item-${index}`]} data-aos="fade-up">
        <a href={`/articles/${slug.current}`}>
          <img
            class="image"
            src={
              index === 0
                ? urlForImage(mainImage).height(512).quality(100).url()
                : urlForImage(mainImage).height(256).quality(100).url()
            }
            transition:name={`article-${slug.current}-image`}
          />

          <div class="container">
            <div class="category">
              <CategoryLabel
                name={category.title}
                transition={`article-${slug.current}-category-${category.title.toLowerCase()}`}
              />
            </div>

            <div class="content">
              <h2
                class="text"
                transition:name={`article-${slug.current}-title`}
              >
                {title}
              </h2>
            </div>
          </div>
        </a>
      </li>
    ))
  }
</ul>

<style lang="scss">
  .wrapper {
    max-width: var(--widthMainContainer);
    width: 100%;
    margin: 2rem auto;
    display: grid;
    list-style: none;
    padding: 0;
    grid-template-columns: repeat(4, 1fr);
    grid-template-rows: repeat(2, 1fr);
    gap: 2rem;

    @media screen and (max-width: 79rem) {
      margin-right: 2rem;
      margin-left: 2rem;
      width: calc(100% - 4rem);
      gap: 1rem;
    }

    @media screen and (max-width: 52rem) {
      grid-template-columns: repeat(2, 1fr);
      grid-template-rows: repeat(4, 1fr);
    }

    @media screen and (max-width: 40rem) {
      grid-template-columns: repeat(1, 1fr);
      grid-template-rows: repeat(4, 1fr);
    }
  }

  .item {
    position: relative;
    overflow: hidden;
    border-radius: 0.625rem;
    display: block;
  }

  a {
    display: block;
    width: 100%;
    height: 100%;
  }

  .image {
    margin: 0;
    display: block;
    height: 100%;
    width: 100%;
    aspect-ratio: 1 / 1;
    object-fit: cover;

    @media screen and (max-width: 52rem) {
      aspect-ratio: 1 / 0.5;
    }
  }

  .container {
    display: flex;
    justify-content: center;
    flex-direction: column;
    position: absolute;
    background: linear-gradient(
      0deg,
      rgba(0, 0, 0, 0.5) 0%,
      rgba(0, 0, 0, 0) 75%
    );
    top: 0;
    left: 0;
    align-items: flex-end;
    height: 100%;
    width: 100%;
    padding: 1rem;
    color: var(--colorWhite);

    @media screen and (max-width: 40rem) {
      background: rgba(0, 0, 0, 0.25);
    }
  }

  .content {
    margin-top: auto;
    width: 100%;

    h2 {
      font-size: 1.5rem;
      margin: 0 0 0.5rem;
      line-height: 1.1;
      font-weight: var(--fontWeightSemiBold);

      @media screen and (min-width: 40rem) and (max-width: 79rem) {
        font-size: 1.125rem;
      }
    }

    p {
      line-height: 1.5;
      margin: 0;
    }
  }

  .text {
    text-shadow: 0 0 0.25rem rgba(0, 0, 0, 0.125);
  }

  .category {
    position: absolute;
    top: 1rem;
    left: 1rem;
  }

  .item-0 {
    grid-column: span 2;
    grid-row: span 2;

    @media screen and (max-width: 40rem) {
      grid-column: span 1;
      grid-row: span 1;
    }

    .container {
      padding: 1.5rem;

      @media screen and (max-width: 40rem) {
        padding: 1rem;
      }
    }

    h2 {
      font-size: 2.75rem;

      @media screen and (max-width: 79rem) {
        font-size: 1.75rem;
      }

      @media screen and (max-width: 40rem) {
        font-size: 1.5rem;
      }
    }

    .text {
      text-shadow: 0 0 0.25rem rgba(0, 0, 0, 0.125);
    }
  }
</style>
