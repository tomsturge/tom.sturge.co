---
const publicationId = "pub_8006d093-158f-4107-899f-5ccbcc87b55a";
const apiKey = "";
---

<div class="newsletter">
  <div class="container">
    <div class="newsletter-content">
      <h2>Weekly Round-up</h2>
      <p>
        Weekly thoughts on strategy, culture transformation, and inclusive
        leadership
      </p>
      <form class="newsletter-form" id="newsletter-signup">
        <input
          type="email"
          name="email"
          placeholder="Enter your email"
          required
          aria-label="Email address"
        />
        <button type="submit">Subscribe</button>
      </form>
      <div
        id="newsletter-message"
        class="newsletter-message"
        aria-live="polite"
      >
      </div>
    </div>
  </div>
</div>

<style>
  .newsletter {
    padding: 80px 0;
    border-bottom: 1px solid var(--border-color);
  }

  .container {
    max-width: 1200px;
    margin: 0 auto;
    padding: 0 20px;
  }

  .newsletter-content {
    background: var(--card-bg);
    padding: 60px;
    border-radius: 8px;
    text-align: center;
    border: 1px solid var(--border-color);
  }

  .newsletter h2 {
    font-size: 2rem;
    font-weight: 700;
    margin-bottom: 15px;
    color: var(--text-color);
  }

  .newsletter p {
    color: var(--secondary-text);
    margin-bottom: 30px;
    font-size: 1.1rem;
  }

  .newsletter-form {
    display: flex;
    gap: 15px;
    justify-content: center;
    max-width: 500px;
    margin: 0 auto;
  }

  .newsletter-form input {
    flex: 1;
    padding: 12px 16px;
    border: 1px solid var(--border-color);
    border-radius: 4px;
    background: var(--bg-color);
    color: var(--text-color);
    font-size: 1rem;
    transition: border-color 0.2s ease;
  }

  .newsletter-form input:focus {
    outline: none;
    border-color: var(--accent-color);
  }

  .newsletter-form button {
    background: var(--accent-color);
    color: var(--bg-color);
    border: none;
    padding: 12px 24px;
    border-radius: 4px;
    cursor: pointer;
    font-weight: 500;
    transition: opacity 0.2s ease;
    white-space: nowrap;
  }

  .newsletter-form button:hover {
    opacity: 0.8;
  }

  .newsletter-form button:disabled {
    opacity: 0.6;
    cursor: not-allowed;
  }

  .newsletter-message {
    margin-top: 15px;
    padding: 10px;
    border-radius: 4px;
    font-size: 0.9rem;
    opacity: 0;
    transition: opacity 0.3s ease;
  }

  .newsletter-message.success {
    background: rgba(56, 161, 105, 0.1);
    color: var(--text-color);
    border: 1px solid rgba(56, 161, 105, 0.3);
    opacity: 1;
  }

  .newsletter-message.error {
    background: rgba(245, 101, 101, 0.1);
    color: var(--text-color);
    border: 1px solid rgba(245, 101, 101, 0.3);
    opacity: 1;
  }

  /* Mobile Responsive */
  @media (max-width: 768px) {
    .newsletter {
      padding: 60px 0;
    }

    .newsletter-content {
      padding: 40px 20px;
    }

    .newsletter-form {
      flex-direction: column;
      max-width: 100%;
    }

    .newsletter h2 {
      font-size: 1.5rem;
    }
  }
</style>

<script define:vars={{ publicationId, apiKey }}>
  document.addEventListener("DOMContentLoaded", function () {
    const form = document.getElementById("newsletter-signup");
    const messageDiv = document.getElementById("newsletter-message");

    if (!form) return;

    form.addEventListener("submit", async function (e) {
      e.preventDefault();

      const email = this.querySelector('input[name="email"]').value;
      const button = this.querySelector("button");
      const originalButtonText = button.textContent;

      // Validate email
      if (!email || !isValidEmail(email)) {
        showMessage("Please enter a valid email address.", "error");
        return;
      }

      // Update button state
      button.disabled = true;
      button.textContent = "Subscribing...";

      try {
        const response = await fetch(
          `https://api.beehiiv.com/v2/publications/${publicationId}/subscriptions`,
          {
            method: "POST",
            headers: {
              Authorization: `Bearer ${apiKey}`,
              "Content-Type": "application/json",
            },
            body: JSON.stringify({
              email: email,
              reactivate_existing: false,
              send_welcome_email: true,
            }),
          },
        );

        if (response.ok) {
          showMessage(
            "Thanks for subscribing! Check your email to confirm.",
            "success",
          );
          this.reset();
        } else {
          throw new Error("Subscription failed");
        }
      } catch (error) {
        console.error("Newsletter signup error:", error);
        showMessage("Something went wrong. Please try again later.", "error");
      } finally {
        // Reset button state
        button.disabled = false;
        button.textContent = originalButtonText;
      }
    });

    function showMessage(text, type) {
      messageDiv.textContent = text;
      messageDiv.className = `newsletter-message ${type}`;

      // Hide message after 5 seconds
      setTimeout(() => {
        messageDiv.className = "newsletter-message";
      }, 5000);
    }

    function isValidEmail(email) {
      const emailRegex = /^[^\s@]+@[^\s@]+\.[^\s@]+$/;
      return emailRegex.test(email);
    }
  });
</script>
